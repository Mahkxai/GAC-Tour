// Generated by Dagger (https://dagger.dev).
package com.example.gactour.ui.presentation.viewModels;

import com.example.gactour.location.LocationManager;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class LocationViewModel_Factory implements Factory<LocationViewModel> {
  private final Provider<LocationManager> locationManagerProvider;

  public LocationViewModel_Factory(Provider<LocationManager> locationManagerProvider) {
    this.locationManagerProvider = locationManagerProvider;
  }

  @Override
  public LocationViewModel get() {
    return newInstance(locationManagerProvider.get());
  }

  public static LocationViewModel_Factory create(
      Provider<LocationManager> locationManagerProvider) {
    return new LocationViewModel_Factory(locationManagerProvider);
  }

  public static LocationViewModel newInstance(LocationManager locationManager) {
    return new LocationViewModel(locationManager);
  }
}
